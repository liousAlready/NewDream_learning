#!/usr/bin/env python
# encoding: utf-8
'''
@contact: 1650503480@qq.com
@file: day04.py
@time: 2021/4/16 09:20
'''

'''
1、根据用户输入的玫瑰花的朵数输出其代表的意义：在古代希腊神话中，玫瑰花集爱情与美丽于一身，所以人们常用玫瑰来表达爱情，但是不同的朵数带表的含义是不同的。
   1朵表是：你是我的唯一。3朵表是：我爱你。10朵表示：十全十美。99朵表示：天长地久。108朵表示：求婚！
2、国家对酒驾的规定是：车辆驾驶人员血液中的酒精含量小于20mg/100ml不构成饮酒驾驶行为。含量大于或者等于20mg/100ml,小于80mg/100ml为饮酒驾车，酒精含量大于或者等于80mg/100ml加醉驾车。现写一段代码判断输入的血液酒精含量是否为酒驾。
3、小明身高1.75m，体重80.5kg。请根据BMI公式（体重除以身高的平方）帮小明计算他的BMI指数，并根据BMI指数：
低于18.5：过轻
18.5-25：正常
25-28：过重
28-32：肥胖
高于32：严重肥胖

4、使用循环语句计算从1到100，一共有多少个尾数为7或者7的倍数这样的数，请输出这样的数。

5、模拟支付宝的蚂蚁森林通过日常的走步--20g，生活缴费--50g，线下支付--100g，网络购票--80g，共享单车--200g等低碳，环保行为可以积攒能量，当能量达到一定数量后，可以种一棵真正的树--500g。
   由用户输入环保行为，来积累能量；查询能量请输入能量来源！退出程序请输入0；
6、编写程序，设置您的余额，流量和剩余通话时间。模拟10086自助查询系统的功能：输入1，显示您当前的余额；输入2，显示您当前剩余的流量，单位为G；输入3，您当前的剩余通话，单位为分钟；输入0，退出自助查询系统。

7、购物车 功能要求： 要求用户输入总资产，例如： 2000 显示商品列表，让用户根据序号选择商品，加入购物车 购买，如果商品总额大于总资产，提示账户余额不足，否则，购买成功。 
 goods=[  {"name":"电脑","price":1999}, 
         {"name":"鼠标","price":10}, 
         {"name":"游艇","price":20}, 
         {"name":"美女","price":998}
]
分程度来进行代码编写：
1、简单版：用户只能输入一次商品的序号，购买一个或者多个，就进行结账；
2、进阶版：用户可以多次输入自己想买的商品序号，同一个商品可以购买多个，最后再进行结账
3、高阶版：把显示商品和加入购物车，结算，三个功能定义成三个函数，进行调用

(5题和6题,7题，三选二)

'''

# # 1、根据用户输入的玫瑰花的朵数输出其代表的意义：在古代希腊神话中，玫瑰花集爱情与美丽于一身，所以人们常用玫瑰来表达爱情，但是不同的朵数带表的含义是不同的。
# #    1朵表是：你是我的唯一。3朵表是：我爱你。10朵表示：十全十美。99朵表示：天长地久。108朵表示：求婚！
# while True:
#     number = int(input("请你输入你的玫瑰朵数: \n"))
#
#     if number == 0:
#         print("祝你幸福🥰")
#         break
#     elif number == 1:
#         print("你是我的唯一")
#     elif number == 3:
#         print("我爱你")
#     elif number == 10:
#         print("十全十美")
#     elif number == 99:
#         print("天长地久")
#     else:
#         print("输入报错啦！")


# # 2、国家对酒驾的规定是：车辆驾驶人员血液中的酒精含量小于20mg/100ml不构成饮酒驾驶行为。
# # 含量大于或者等于20mg/100ml,小于80mg/100ml为饮酒驾车，酒精含量大于或者等于80mg/100ml加醉驾车。
# # 现写一段代码判断输入的血液酒精含量是否为酒驾。
# alcohol = int(input("输入酒精含量"))
#
# if alcohol < 20:
#     print("酒精没有超过20mg/100ml 不构成饮酒驾驶行为")
# elif 20 <= alcohol < 80:
#     print("您为饮酒驾车，请下车配合检查！")
# elif alcohol >= 80:
#     print("您为饮酒驾车，请立即下车配合检查！")

# '''
# 3、小明身高1.75m，体重80.5kg。请根据BMI公式（体重除以身高的平方）帮小明计算他的BMI指数，并根据BMI指数：
# 低于18.5：过轻  18.5-25：正常  25-28：过重 28-32：肥胖 高于32：严重肥胖
# '''
# height = float(input("请输入你的身高（m）："))
# kg = float(input("请输入你的体重（kg）："))
#
# BMi = kg / (height ** 2)
# if BMi < 18.5:
#     print("你体重过轻了")
# elif 18.5 <= BMi < 25:
#     print("不错呀小伙子，今天晚上来我房间")
# elif 25 <= BMi < 28:
#     print("有点偏重了喔")
# elif 28 <= BMi < 32:
#     print("该减减肥了")
# elif BMi > 32:
#     print("收拾收拾吧，快去健身！")

# # 4、使用循环语句计算从1到100，一共有多少个尾数为7或者7的倍数这样的数，请输出这样的数。
# num = []   # 采用一个空列表
# for i in range(1, 101, 1):   # 循环列表
#     if i % 7 == 0:
#         num.append(i)
#     elif str(i)[-1] == '7':  # 取字符串最后一位字符来进行判断
#         num.append(i)
#
# print(num)


# 5、模拟支付宝的蚂蚁森林通过日常的走步--20g，生活缴费--50g，线下支付--100g，网络购票--80g，共享单车--200g等低碳，环保行为可以积攒能量，当能量达到一定数量后，可以种一棵真正的树--500g。
# # 5.1由用户输入环保行为，来积累能量；查询能量请输入能量来源！退出程序请输入0；
# print('\n查询能量请输入能量来源！退出程序请输入0\n')
# print('能量来源如下:\n\n'
#       '生活缴费、行走、共享单车、线下支付、网络购票\n')
#
#
# def p():
#     while True:
#         x = input()
#         if x == '生活缴费':
#             return ('180g')
#         elif x == '行走':
#             return ('200g')
#         elif x == '共享单车':
#             return ('80g')
#         elif x == '线下支付':
#             return ('5g')
#         elif x == '网络购票':
#             return ('80g')
#         elif x == '0':
#             return ('已退出！')
#             break
#
#
# c = p()
# print(c)

# # 5.1.1 用户输入行为，如果能量超过500则退出循环，并且输出你可以种树了   自己加的题目哈 一看是没看清楚
# energy = []
# while True:
#     e_protection = input("请输入您的环保行为 :\n")
#
#     if sum(energy) >= int(500):
#         print("您当前的能量等于或大于500g，已经可以种树啦！")
#         break
#     elif e_protection == "走路":
#         energy.append(20)
#         print("您获得了--20g能量，继续加油😯！")
#     elif e_protection == "生活缴费":
#         energy.append(50)
#         print("您获得了--50g能量，继续加油😯！")
#     elif e_protection == "线下支付":
#         energy.append(100)
#         print("您获得了--100g能量，继续加油😯！")
#     elif e_protection == "网络购票":
#         energy.append(80)
#         print("您获得了--80g能量，继续加油😯！")
#     elif e_protection == "共享单车":
#         energy.append(200)
#         print("您获得了--200g能量，继续加油😯！")
#     elif e_protection == str(0):
#         print("您退出了种树活动！")
#         break

# # 6、编写程序，设置您的余额，流量和剩余通话时间。模拟10086自助查询系统的功能：
# #    输入1，显示您当前的余额；输入2，显示您当前剩余的流量，单位为G；输入3，您当前的剩余通话，单位为分钟；输入0，退出自助查询系统。
#
# balance = 92
# flow = "10G"
# time = 1024
# print("您好，欢迎拨打10086热线！请输入您本次要查找的内容 ")
#
# while True:
#     number = int(input("输入1，显示您当前的余额；输入2，显示您当前剩余的流量，单位为G；输入3，您当前的剩余通话，单位为分钟；输入0，退出自助查询系统。 \n"))
#     if number == 1:
#         print("您当前的余额还剩 %d" % balance)
#     elif number == 2:
#         print("您当前的流量还剩 %s" % flow)
#     elif number == 3:
#         print("您当前套菜内余额还剩 %d " % time)
#     elif number == 0 :
#         print("退出自助查询系统")
#         break
#     else:
#         print("您的输入有误，请重新输入")
#         continue

'''
7、购物车 功能要求： 要求用户输入总资产，例如： 2000 显示商品列表，让用户根据序号选择商品，加入购物车 购买，如果商品总额大于总资产，提示账户余额不足，否则，购买成功。 
 goods=[  {"name":"电脑","price":1999}, 
         {"name":"鼠标","price":10}, 
         {"name":"游艇","price":20}, 
         {"name":"美女","price":998}
]
分程度来进行代码编写：
1、简单版：用户只能输入一次商品的序号，购买一个或者多个，就进行结账；
2、进阶版：用户可以多次输入自己想买的商品序号，同一个商品可以购买多个，最后再进行结账
3、高阶版：把显示商品和加入购物车，结算，三个功能定义成三个函数，进行调用
'''
# goods = [{"name": "电脑", "price": 1999}, {"name": "鼠标", "price": 10}, {"name": "游艇", "price": 20},
#          {"name": "美女", "price": 998}]
# money = int(input("请输入你的总资产"))
#
# for i in goods: # 遍历列表 取出字典
#     for k,v in i.items():  # 取出字典中的 key value
#         if money == v.count():
#             print("牛啊")


# =============百度出来的 不是自己做的============
goods = [
{"name": "电脑", "price": 1999},
{"name": "鼠标", "price": 10},
{"name": "游艇", "price": 20},
{"name": "美女", "price": 998},
]
my_money = int(input("请输入金额："))
while True:#用于循环购买
    for i,good in enumerate(goods,1):#循环商品信息
        print(i,goods[i-1]["name"],goods[i-1]["price"])#打印列表
    user_c = int(input("请选择商品："))#输入商品序号
    if user_c >0 and user_c <=len(goods):#判断输入是否在列表中
        if int(goods[user_c-1]["price"]) <= my_money:#余额大于商品金额
            my_money = my_money - int(goods\
                                    [user_c-1]["price"])#减商品金额
            print("购买 %s 成功,余额为 %s"%(goods[user_c-1]["name"]\
                                            ,my_money))#打印成功信息
        else:
            print("余额不足!再见！")
            break
    else:
        print("无此商品！")
        continue
