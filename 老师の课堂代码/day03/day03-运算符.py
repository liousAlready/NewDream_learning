'''
@File : 运算符.py
@Time : 2021/4/7 20:36
@Author: luoman
'''
# import lib
# 运算： 算术运算  逻辑运算
'''
算术运算符
赋值运算符
关系运算符
逻辑运算符
位运算符(不懂)---算法
三元运算符
身份运算符
成员运算符
'''
# 算术运算符 + - *  /(除法)  //(整除)  %(模运算,取余数) **(幂)
a = 10
b = 3
c = 5
# /  返回的结果一定是浮点型的数
print(a/b)
print(a/c)
# // 整除 返回int
print(a//b)
print(a//c)
# % 模运算 -- 判断一个数能不能被另一个数整除
print('模运算：', a % b)
print('模运算：', a % c)
# ** 幂
print('幂运算：', 10**5)

# 赋值运算 = ：只有赋值运算是从右往左边进行计算，只有赋值运算才能改变变量的值

d = 10
d = d + 10
print(d)
# 赋值运算符可以与 算术结合使用
# 如果是 a=a+b---> a+=b
# a=a-b ---> a-=b   a=a/b---> a/=b  a=a*b---> a*=b  a%=b
# 赋值运算分为两个赋值方式：赋数值--值传递   赋地址---地址传递
# 列表和字典
list01 = [1, 2, 3]
list02 = list01  # 把list01的地址赋给list02  取别名

# 关系运算符 ==，！= ，< , >, >=, <=
# 二元运算符：两个表达式参与运算
# 返回的值一定是bool:true,false
print(a > b)
print(a + b == b)

# 表达式：是由变量或数值及运算符组成式子，任何表达式都是有运算结果的
# 5，a+b,a>b, a+5

# 逻辑运算符
# or 或(两个表达式，只要有一个的结果为真，那整个逻辑运算结果是为真)
# and 与(两个表达式的结果都为真，那整个逻辑运算结果是为真，只要有一个为假，结果为假)
# 是二元运算符

# not 非(一元运算符)：非真即假
print('a>b or True:', a > b or True )
print('a>b and True:', a < b and True )
# 逻辑运算符是进行短路运算：
# or：如果 or左边的表达式结果为真，则不对右边的表达式进行运算，直接取左边的结果为整个式子的结果
#     如果 or左边表达式结果为假，则取右边的结果为整个表达式的结果
print('true or 2:', True or 2)  # True
print('False or 2:', False or 2)  # 2
# and：如果 and 左边的表达式结果为假，则不对右边的表达式进行运算，直接取左边的结果为整个式子的结果
#     如果 and  左边表达式结果为真，则取右边的结果为整个表达式的结果
print('true and 2:', True and 2)  # 2
print('False and 2:', False and 2)  # false

# 位运算符(不懂)---算法
# 前提条件：要把参数运算的数据转换成二进制进行运算
e = 20
f = 6
# e=20: 00010100
# f=6:  00000110
# 按位与 & : 两位同时为1，结果为1，如果有一个为0，结果为0
# e=20: 00010100
# f=6:  00000110
#       00000100
print('e & f:', e & f)  # 4
# 按位或 | : 两位有一个为1，结果为1，如果两位都为0，结果为0
# e=20: 00010100
# f=6:  00000110
#       00010110
print('e | f:', e | f)  # 22
# 按位异或 ^ ：相异为1，相同为0
# e=20: 00010100
# f=6:  00000110
#       00010010
print('e ^ f:', e ^ f)  # 18
# 翻转 ~  一元运算
# e=20: 00010100  # 原，补，反码的运算 # ~x == -(x+1)
print('~e:', ~e)  # -21  --->-(20+1)-->  -21
# 左移 <<: 左移几位 == x*2的几次方
print('e<<2:', e << 3) # 160 -->20* 2**3
# e=20: 00010100
#     0001010000  16+64 =80
# 右移 >>:右移几位 == x//2的几次方
# e=20: 00010100
#         000101
print('e>>2:', e >> 2) # 5-->20//4

# 三元运算符： 表达1 if 表达式2 else 表达式3
# 结果：如果 表达式2成立，则取表达式1的值为整个式的结果，如果不成立则取表达式3为式子的结果
#     又称为条件运算符，根据判定条件执行语句。
print('e if e<f else f:', e if e == f else f )

# 成员运算符：in  not
#   测试给定值是否为序列中的成员,例如字符串,列表或元组
print('s' in 'hello') # 如果在，结果为True ，如果不在 结果为 False

print('s' not in 'hello') # 如果在，结果为True ，如果不在 结果为 False
list01 = ['a', 'b', 'ac']
print(1 in list01)
# 身份运算符：判断两个标识符是不是引用自一个对象 is ,  is not
# 如果两个变量的内存地址相同，则表示来自同一个对象
i = 2
k = 20
n = 10
print(id(i))
print(id(k))
print(id(n))
print(i is k)
print(i is n)
list02 = list01
print(list01 is list02)

print((n + k) ** i)









