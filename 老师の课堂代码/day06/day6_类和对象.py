'''
@File : day6_类和对象.py
@Time : 2021/4/21 20:47
@Author: luoman
'''
# import lib
# 面向对象 --- 编程思路---写代码的思路
'''
面向过程：C语言，把要实现的功能 按流程一步一步的来实现
比如：美团点个外卖：先要打开美团，选择商家，选择外卖，商家接单，骑手送餐，拿到外卖
面向对象：对象
比如：美团点个外卖：涉及哪些对象，美团软件，商家，骑手，你吃东西
'''
# 面向对象包括三个过程：面向对象分析（OOA）、面向对象设计（OOD）、面向对象编程（OOP）。

'''
描述对象：属性/特性   操作/方法
把具有相同属性或者方法的对象进行抽象--总结为一个类
类：类是对象的抽象，是一个抽象的概念
对象：对象是类的具体化
'''
# 一定是先设计好类，才能有对象
'''
定义类的语法：
class 类名:  # 类名首字母一定要大写
    属性(变量)
       分为:类属性，实例属性(对象属性)，内置属性
       类属性：定义在方法的外面，没有self关键字
       实例属性(对象属性)：定义在含有形式参数中含有 self参数的函数中,必须是 self.属性名
       内置属性：是由系统定义的，只需要会用就行了，一定是 双__开头和结尾 比如 __name__
    
    方法(其实就是函数)
'''
class Qishou:
    '''这是定义的一个骑手类'''

    # 类属性
    name = '骑手'  # 类属性:可以被类名引用，也可以被对象引用； 所有对象都拥有的属性且属性的值相同，定义成类属性
    majia = '黄色'
    def __init__(self, phone, address):
        self.phone = phone  #'13677484764'
        self.address = address  # '五一路'

    def postwaimai(self):
        print('送外卖')
        self.t = '21:26'  # 实例属性 ：所有对象都应该有的属性，但是每个对象的属性值不相同

# 定义对象
# 对象名 = 类名([参数])
q1 = Qishou('13677484764','五一路')
# 获取对象的属性： 对象名.属性
# 获取对象的方法:  对象名.方法
print(q1.phone)
print(q1.address)
print(q1.name)
print(Qishou.name)
# print(Qishou.phone)  # 错误引用：实例属性不能被类名引用，只能被对象引用

q1.postwaimai()
q2 = Qishou('13777888877', '牛顿一路')
print(q2.phone)
q2.postwaimai()


print(q1.__class__)
print(Qishou.__module__)  # 内置属性
print(Qishou.__doc__)  # 类的文档属性






